version: '3.1'

# TYMCZASOWY DO ZROBIERNIA KEYCLOAK

services:

  mongo-db:
    image: mongo
    container_name: games-store-db
    restart: always
    environment:
      MONGO_INITDB_DATABASE: games-store-db
    # Uncomment this if you want to access database from outside the Docker network
    ports:
      - "27017:27017"
    volumes:
      - ./backend-express/dbInit.mongodb.js:/setup/dbInit.mongodb.js
    networks:
      - containers-net 

  # express-server:
  #   image: node
  #   container_name: games-store-express
  #   restart: always
  #   volumes:
  #     - ./backend-express:/express/
  #   working_dir: /express/ 
  #   command: ["sh", "-c", "npm install && node serverExpress.js"]
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - containers-net

  # frontend:
  #   image: node
  #   container_name: games-store-front
  #   restart: always
  #   volumes:
  #     - ./front-store-games:/front/
  #   working_dir: /front/
  #   command: ["sh", "-c", "npm install && npm run build && npm start"]
  #   ports:
  #     - "8080:8080"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: games-store-auth
    restart: always
    ports:
      - 8080:8080
    command: -v start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak:/opt/keycloak/data/import

  # chyba nie ma sensu dawac tutaj sieci jak i tam ma byc to dostepne dla api i frontu


networks:
  containers-net:
    driver: bridge